name = "prasert-upload-to-dive"
main = "src/index.ts"
compatibility_date = "2024-08-06"
compatibility_flags = ["nodejs_compat"]

[vars]
TEST_VAR = "HelloWorld"
SUPABASE_URL = ""
SUPABASE_KEY = ""

[env.production]
TEST_VAR = "HelloWorld"
SUPABASE_URL = ""
SUPABASE_KEY = ""

[env.staging]
TEST_VAR = "HelloWorld"
SUPABASE_URL = ""
SUPABASE_KEY = ""

# Optional: Use Smart Placement to minimize latency.
# Uncomment the lines below if you want to enable Smart Placement.
# [placement]
# mode = "smart"

# Variables: Environment variables that can be accessed in your Worker.
# Example:
# [vars]
# MY_VARIABLE = "production_value"

# Uncomment the sections below if you need to bind specific Cloudflare services.

# AI Model Catalog Binding: For running machine learning models on Cloudflare.
# [ai]
# binding = "AI"

# Analytics Engine Dataset Binding: For writing analytics within your Worker.
# [[analytics_engine_datasets]]
# binding = "MY_DATASET"

# Browser Rendering: For using a headless browser instance on Cloudflare's global network.
# [browser]
# binding = "MY_BROWSER"

# D1 Database Binding: Cloudflareâ€™s native serverless SQL database.
# [[d1_databases]]
# binding = "MY_DB"
# database_name = "my-database"
# database_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"

# Dispatch Namespace Binding: For deploying serverless functions programmatically.
# [[dispatch_namespaces]]
# binding = "MY_DISPATCHER"
# namespace = "my-namespace"

# Durable Objects Binding: For creating long-running "server" processes.
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"

# Durable Objects Migration: Required when deploying changes to Durable Objects.
# [[migrations]]
# tag = "v1"
# new_classes = ["MyDurableObject"]

# Hyperdrive Binding: Accelerate access to your existing databases from Workers.
# [[hyperdrive]]
# binding = "MY_HYPERDRIVE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# KV Namespace Binding: Persistent storage for key-value pairs.
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# mTLS Certificate Binding: Present a client certificate when communicating with another service.
# [[mtls_certificates]]
# binding = "MY_CERTIFICATE"
# certificate_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"

# Queue Producer Binding: Schedule tasks to be processed later by a Queue consumer.
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Queue Consumer Binding: Retrieve tasks scheduled by Producers to act on them.
# [[queues.consumers]]
# queue = "my-queue"

# R2 Bucket Binding: Store arbitrarily large blobs of data, such as files.
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "my-bucket"

# Service Binding: Call another Worker without network overhead.
# [[services]]
# binding = "MY_SERVICE"
# service = "my-service"

# Vectorize Index Binding: Store and query vector embeddings for vector search use-cases.
# [[vectorize]]
# binding = "MY_INDEX"
# index_name = "my-index"
